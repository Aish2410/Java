{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/alert.service\";\nimport * as i2 from \"src/app/services/auth.service\";\nimport * as i3 from \"src/app/services/staff.service\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/forms\";\nfunction AddStaffComponent_div_25_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\", 7)(2, \"div\", 8)(3, \"label\", 33);\n    i0.ɵɵtext(4, \"Admin Name\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(5, \"input\", 34);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(6, \"div\", 7)(7, \"div\", 8)(8, \"label\", 35);\n    i0.ɵɵtext(9, \"Admin Contact\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(10, \"input\", 36);\n    i0.ɵɵelementEnd()()();\n  }\n}\nfunction AddStaffComponent_tr_49_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"td\")(10, \"button\", 37);\n    i0.ɵɵlistener(\"click\", function AddStaffComponent_tr_49_Template_button_click_10_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r5);\n      const staff_r3 = restoredCtx.$implicit;\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.deleteUser(staff_r3.staffId));\n    });\n    i0.ɵɵtext(11, \"Delete\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"button\", 38);\n    i0.ɵɵlistener(\"click\", function AddStaffComponent_tr_49_Template_button_click_12_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r5);\n      const staff_r3 = restoredCtx.$implicit;\n      const ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.openPopup(staff_r3));\n    });\n    i0.ɵɵtext(13, \"View\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const staff_r3 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(staff_r3.staffId);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(staff_r3.email);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(staff_r3.role);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(staff_r3.active ? \"ACTIVE\" : \"DEACTIVETED\");\n  }\n}\nconst _c0 = function (a0) {\n  return {\n    \"display\": a0\n  };\n};\nexport class AddStaffComponent {\n  constructor(alert, auth, staffService) {\n    this.alert = alert;\n    this.auth = auth;\n    this.staffService = staffService;\n    this.staffList = [];\n    this.selectedUser = {\n      active: false,\n      email: \"\",\n      password: \"\",\n      role: \"\",\n      staffId: 0\n    };\n    this.displayStyle = \"none\";\n  }\n  ngOnInit() {\n    this.staffService.getAll().subscribe(res => {\n      this.staffList = res.response || [];\n    });\n  }\n  onSubmit(ngForm) {\n    if (ngForm.form.invalid) {\n      this.alert.error(\"Please fill required elements\");\n      return;\n    }\n    const credentials = {\n      ...ngForm.form.value,\n      role: [\"STAFF\"]\n    };\n    this.auth.register(credentials);\n    ngForm.resetForm();\n    this.ngOnInit();\n  }\n  deleteUser(userId) {\n    this.staffService.delete(userId).subscribe(res => {\n      this.alert.apiSuccess(res);\n      this.ngOnInit();\n    }, this.alert.apiFail);\n  }\n  openPopup(selUser) {\n    this.selectedUser = {\n      ...selUser,\n      password: \"\"\n    };\n    this.displayStyle = \"block\";\n  }\n  closePopup() {\n    this.displayStyle = \"none\";\n  }\n  onUpdate() {\n    this.staffService.update(this.selectedUser).subscribe(res => {\n      this.closePopup();\n      this.alert.apiSuccess(res);\n      this.ngOnInit();\n    }, this.alert.apiFail);\n  }\n}\nAddStaffComponent.ɵfac = function AddStaffComponent_Factory(t) {\n  return new (t || AddStaffComponent)(i0.ɵɵdirectiveInject(i1.AlertService), i0.ɵɵdirectiveInject(i2.AuthService), i0.ɵɵdirectiveInject(i3.StaffService));\n};\nAddStaffComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AddStaffComponent,\n  selectors: [[\"app-add-staff\"]],\n  decls: 74,\n  vars: 7,\n  consts: [[1, \"register_page\"], [1, \"cantainer\"], [1, \"row\"], [1, \"col-md-4\", \"offset-md-4\"], [1, \"card\"], [3, \"ngSubmit\"], [\"registerForm\", \"ngForm\"], [1, \"col-12\", \"mt-3\"], [1, \"form-group\"], [\"for\", \"exampleInputEmail1\"], [\"type\", \"email\", \"ngModel\", \"\", \"name\", \"username\", \"pattern\", \"[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,4}$\", \"id\", \"exampleInputEmail1\", \"required\", \"\", \"aria-describedby\", \"emailHelp\", 1, \"form-control\"], [\"type\", \"text\", \"ngModel\", \"\", \"name\", \"name\", 1, \"form-control\"], [\"type\", \"number\", \"ngModel\", \"\", \"name\", \"mobileNumber\", 1, \"form-control\"], [4, \"ngIf\"], [\"for\", \"exampleInputPassword1\"], [\"type\", \"password\", \"ngModel\", \"\", \"name\", \"password\", \"id\", \"exampleInputPassword1\", \"required\", \"\", 1, \"form-control\"], [\"type\", \"submit\", 1, \"btn\", \"btn-outline-primary\", \"mt-3\"], [1, \"row\", \"mt-4\"], [1, \"col-12\", \"card\"], [1, \"table\", \"table-bordered\"], [\"scope\", \"col\"], [4, \"ngFor\", \"ngForOf\"], [\"tabindex\", \"-1\", \"role\", \"dialog\", 1, \"modal\", 3, \"ngStyle\"], [\"role\", \"document\", 1, \"modal-dialog\", \"modal-dialog-centered\"], [1, \"modal-content\"], [1, \"modal-header\"], [1, \"modal-title\"], [1, \"modal-body\"], [3, \"submit\"], [\"type\", \"email\", \"name\", \"email\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"password\", \"name\", \"couresFees\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [1, \"modal-footer\"], [\"type\", \"button\", 1, \"btn\", \"btn-danger\", 3, \"click\"], [\"for\", \"adminName\"], [\"type\", \"text\", \"ngModel\", \"\", \"name\", \"adminName\", \"id\", \"adminName\", \"required\", \"\", 1, \"form-control\"], [\"for\", \"adminContact\"], [\"type\", \"text\", \"ngModel\", \"\", \"name\", \"adminContact\", \"id\", \"adminContact\", \"required\", \"\", 1, \"form-control\"], [1, \"btn\", \"btn-outline-danger\", \"me-2\", 3, \"click\"], [1, \"btn\", \"btn-outline-success\", 3, \"click\"]],\n  template: function AddStaffComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      const _r7 = i0.ɵɵgetCurrentView();\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"div\", 4)(5, \"h1\");\n      i0.ɵɵtext(6, \"Register new staff\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"form\", 5, 6);\n      i0.ɵɵlistener(\"ngSubmit\", function AddStaffComponent_Template_form_ngSubmit_7_listener() {\n        i0.ɵɵrestoreView(_r7);\n        const _r0 = i0.ɵɵreference(8);\n        return i0.ɵɵresetView(ctx.onSubmit(_r0));\n      });\n      i0.ɵɵelementStart(9, \"div\", 2)(10, \"div\", 7)(11, \"div\", 8)(12, \"label\", 9);\n      i0.ɵɵtext(13, \"Email address\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(14, \"input\", 10);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(15, \"div\", 7)(16, \"div\", 8)(17, \"label\", 9);\n      i0.ɵɵtext(18, \"Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(19, \"input\", 11);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(20, \"div\", 7)(21, \"div\", 8)(22, \"label\", 9);\n      i0.ɵɵtext(23, \"Mobile Number\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(24, \"input\", 12);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(25, AddStaffComponent_div_25_Template, 11, 0, \"div\", 13);\n      i0.ɵɵelementStart(26, \"div\", 7)(27, \"div\", 8)(28, \"label\", 14);\n      i0.ɵɵtext(29, \"Password\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(30, \"input\", 15);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(31, \"button\", 16);\n      i0.ɵɵtext(32, \"Submit\");\n      i0.ɵɵelementEnd()()()()()();\n      i0.ɵɵelementStart(33, \"div\", 17)(34, \"div\", 18)(35, \"table\", 19)(36, \"thead\")(37, \"tr\")(38, \"th\", 20);\n      i0.ɵɵtext(39, \"ID\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(40, \"th\", 20);\n      i0.ɵɵtext(41, \"Username/Email\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(42, \"th\", 20);\n      i0.ɵɵtext(43, \"Role\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(44, \"th\", 20);\n      i0.ɵɵtext(45, \"Status\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(46, \"th\", 20);\n      i0.ɵɵtext(47, \"Action\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(48, \"tbody\");\n      i0.ɵɵtemplate(49, AddStaffComponent_tr_49_Template, 14, 4, \"tr\", 21);\n      i0.ɵɵelementEnd()()()()();\n      i0.ɵɵelementStart(50, \"div\", 22)(51, \"div\", 23)(52, \"div\", 24)(53, \"div\", 25)(54, \"h4\", 26);\n      i0.ɵɵtext(55, \"Course Details \");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(56, \"div\", 27)(57, \"form\", 28);\n      i0.ɵɵlistener(\"submit\", function AddStaffComponent_Template_form_submit_57_listener() {\n        return ctx.onUpdate();\n      });\n      i0.ɵɵelementStart(58, \"div\", 2)(59, \"div\", 7)(60, \"div\", 8)(61, \"label\");\n      i0.ɵɵtext(62, \"Username\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(63, \"input\", 29);\n      i0.ɵɵlistener(\"ngModelChange\", function AddStaffComponent_Template_input_ngModelChange_63_listener($event) {\n        return ctx.selectedUser.email = $event;\n      });\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(64, \"div\", 7)(65, \"div\", 8)(66, \"label\");\n      i0.ɵɵtext(67, \"Password\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(68, \"input\", 30);\n      i0.ɵɵlistener(\"ngModelChange\", function AddStaffComponent_Template_input_ngModelChange_68_listener($event) {\n        return ctx.selectedUser.password = $event;\n      });\n      i0.ɵɵelementEnd()()()();\n      i0.ɵɵelementStart(69, \"button\", 16);\n      i0.ɵɵtext(70, \"Update\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(71, \"div\", 31)(72, \"button\", 32);\n      i0.ɵɵlistener(\"click\", function AddStaffComponent_Template_button_click_72_listener() {\n        return ctx.closePopup();\n      });\n      i0.ɵɵtext(73, \" Close \");\n      i0.ɵɵelementEnd()()()()();\n    }\n    if (rf & 2) {\n      const _r0 = i0.ɵɵreference(8);\n      i0.ɵɵadvance(25);\n      i0.ɵɵproperty(\"ngIf\", _r0.form.value.role === \"ACM\");\n      i0.ɵɵadvance(24);\n      i0.ɵɵproperty(\"ngForOf\", ctx.staffList);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngStyle\", i0.ɵɵpureFunction1(5, _c0, ctx.displayStyle));\n      i0.ɵɵadvance(13);\n      i0.ɵɵproperty(\"ngModel\", ctx.selectedUser.email);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngModel\", ctx.selectedUser.password);\n    }\n  },\n  dependencies: [i4.NgForOf, i4.NgIf, i4.NgStyle, i5.ɵNgNoValidate, i5.DefaultValueAccessor, i5.NumberValueAccessor, i5.NgControlStatus, i5.NgControlStatusGroup, i5.RequiredValidator, i5.PatternValidator, i5.NgModel, i5.NgForm],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["i0","AddStaffComponent","constructor","alert","auth","staffService","active","email","password","role","staffId","ngOnInit","getAll","subscribe","res","staffList","response","onSubmit","ngForm","form","invalid","error","credentials","value","register","resetForm","deleteUser","userId","delete","apiSuccess","apiFail","openPopup","selUser","selectedUser","displayStyle","closePopup","onUpdate","update","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\Dell\\university_project\\src\\app\\pages\\admin\\add-staff\\add-staff.component.html","C:\\Users\\Dell\\university_project\\src\\app\\pages\\admin\\add-staff\\add-staff.component.ts"],"sourcesContent":["<div class=\"register_page\">\n    <div class=\"cantainer\">\n        <div class=\"row\">\n            <div class=\"col-md-4 offset-md-4\">\n                <div class=\"card\">\n                    <h1>Register new staff</h1>\n                    <form #registerForm=\"ngForm\" (ngSubmit)=\"onSubmit(registerForm)\">\n\n                        <div class=\"row\">\n                            <div class=\"col-12 mt-3\">\n                                <div class=\"form-group\">\n                                    <label for=\"exampleInputEmail1\">Email address</label>\n                                    <input type=\"email\" class=\"form-control\" ngModel name=\"username\"\n                                        pattern=\"[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$\" id=\"exampleInputEmail1\"\n                                        required aria-describedby=\"emailHelp\">\n                                </div>\n                            </div>\n                            <div class=\"col-12 mt-3\">\n                                <div class=\"form-group\">\n                                    <label for=\"exampleInputEmail1\">Name</label>\n                                    <input type=\"text\" class=\"form-control\" ngModel name=\"name\">\n                                </div>\n                            </div>\n                            <div class=\"col-12 mt-3\">\n                                <div class=\"form-group\">\n                                    <label for=\"exampleInputEmail1\">Mobile Number</label>\n                                    <input type=\"number\" class=\"form-control\" ngModel name=\"mobileNumber\">\n                                </div>\n                            </div>\n                           \n\n                            <div *ngIf=\"registerForm.form.value.role === 'ACM'\">\n                                <div class=\"col-12 mt-3\">\n                                    <div class=\"form-group\">\n                                        <label for=\"adminName\">Admin Name</label>\n                                        <input type=\"text\" class=\"form-control\" ngModel name=\"adminName\" id=\"adminName\"\n                                            required>\n                                    </div>\n                                </div>\n                                <div class=\"col-12 mt-3\">\n                                    <div class=\"form-group\">\n                                        <label for=\"adminContact\">Admin Contact</label>\n                                        <input type=\"text\" class=\"form-control\" ngModel name=\"adminContact\"\n                                            id=\"adminContact\" required>\n                                    </div>\n                                </div>\n                            </div>\n\n                            <div class=\"col-12 mt-3\">\n                                <div class=\"form-group\">\n                                    <label for=\"exampleInputPassword1\">Password</label>\n                                    <input type=\"password\" class=\"form-control\" ngModel name=\"password\"\n                                        id=\"exampleInputPassword1\" required>\n                                </div>\n                            </div>\n                        </div>\n\n                        <button type=\"submit\" class=\"btn btn-outline-primary mt-3\">Submit</button>\n                    </form>\n                </div>\n            </div>\n        </div>\n    </div>\n\n    <div class=\"row mt-4\">\n        <div class=\"col-12 card\">\n    \n            <table class=\"table table-bordered\">\n                <thead>\n                    <tr>\n                        <th scope=\"col\">ID</th>\n                        <th scope=\"col\">Username/Email</th>\n                        <th scope=\"col\">Role</th>\n                        <th scope=\"col\">Status</th>\n                        <th scope=\"col\">Action</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr *ngFor=\"let staff of staffList\">\n                        <td>{{staff.staffId }}</td>\n                        <td>{{staff.email }}</td>\n                        <td>{{staff.role}}</td>\n                        <td>{{staff.active ? 'ACTIVE' : 'DEACTIVETED'}}</td>\n                        \n                        <td>\n                            <button class=\"btn btn-outline-danger me-2\"\n                                (click)=\"deleteUser(staff.staffId)\">Delete</button>\n                            <button class=\"btn btn-outline-success\" (click)=\"openPopup(staff)\">View</button>\n    \n                        </td>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n    </div>\n</div>\n\n\n<div class=\"modal \" tabindex=\"-1\" role=\"dialog\" [ngStyle]=\"{'display':displayStyle}\">\n    <div class=\"modal-dialog modal-dialog-centered\" role=\"document\">\n        <div class=\"modal-content\">\n            <div class=\"modal-header\">\n                <h4 class=\"modal-title\">Course Details </h4>\n            </div>\n            <div class=\"modal-body\">\n                <form (submit)=\"onUpdate()\">\n\n                    <div class=\"row\">\n                        <div class=\"col-12 mt-3\">\n                            <div class=\"form-group\">\n                                <label>Username</label>\n                                <input type=\"email\" class=\"form-control\" [(ngModel)]=\"selectedUser.email \"\n                                    name=\"email\" required>\n                            </div>\n                        </div>\n                        <div class=\"col-12 mt-3\">\n                            <div class=\"form-group\">\n                                <label>Password</label>\n                                <input type=\"password\" class=\"form-control\" [(ngModel)]=\"selectedUser.password\"\n                                    name=\"couresFees\" required>\n                            </div>\n                        </div>\n                    </div>\n\n                    <button type=\"submit\" class=\"btn btn-outline-primary mt-3\">Update</button>\n                </form>\n\n            </div>\n            <div class=\"modal-footer\">\n                <button type=\"button\" class=\"btn btn-danger\" (click)=\"closePopup()\">\n                    Close\n                </button>\n            </div>\n        </div>\n    </div>\n</div>","import { Component } from \"@angular/core\";\nimport { NgForm } from \"@angular/forms\";\nimport { UniversityStraffMemberDTO, UserDTO } from \"src/app/interfaces\";\nimport { AlertService } from \"src/app/services/alert.service\";\nimport { AuthService } from \"src/app/services/auth.service\";\nimport { StaffService } from \"src/app/services/staff.service\";\n\n@Component({\n  selector: \"app-add-staff\",\n  templateUrl: \"./add-staff.component.html\",\n  styleUrls: [\"./add-staff.component.scss\"],\n})\nexport class AddStaffComponent {\n  public staffList: UniversityStraffMemberDTO[] = [];\n  public selectedUser: UniversityStraffMemberDTO = {\n    active: false,\n    email: \"\",\n    password: \"\",\n    role: \"\",\n    staffId: 0,\n  };\n\n  displayStyle = \"none\";\n\n  constructor(\n    private alert: AlertService,\n    private auth: AuthService,\n    private staffService: StaffService\n  ) {}\n\n  ngOnInit() {\n    this.staffService.getAll().subscribe((res: any) => {\n      this.staffList = res.response || [];\n    });\n  }\n\n  onSubmit(ngForm: NgForm) {\n    if (ngForm.form.invalid) {\n      this.alert.error(\"Please fill required elements\");\n      return;\n    }\n\n    const credentials: UserDTO = { ...ngForm.form.value, role: [\"STAFF\"] };\n\n    this.auth.register(credentials);\n    ngForm.resetForm();\n    this.ngOnInit();\n  }\n\n  deleteUser(userId: number) {\n    this.staffService.delete(userId).subscribe((res: any) => {\n      this.alert.apiSuccess(res);\n      this.ngOnInit();\n    }, this.alert.apiFail);\n  }\n\n  openPopup(selUser: UniversityStraffMemberDTO) {\n    this.selectedUser = { ...selUser, password: \"\" };\n    this.displayStyle = \"block\";\n  }\n  closePopup() {\n    this.displayStyle = \"none\";\n  }\n\n  onUpdate() {\n    this.staffService.update(this.selectedUser).subscribe((res: any) => {\n      this.closePopup();\n      this.alert.apiSuccess(res);\n      this.ngOnInit();\n    }, this.alert.apiFail);\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}