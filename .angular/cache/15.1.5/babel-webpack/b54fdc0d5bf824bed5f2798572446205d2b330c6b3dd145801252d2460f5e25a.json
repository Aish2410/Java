{"ast":null,"code":"import Swal from 'sweetalert2';\nimport * as i0 from \"@angular/core\";\nexport class AlertService {\n  constructor() {}\n  error(message) {\n    Swal.fire(\"Warning\", message, 'warning');\n  }\n  success(message) {\n    return Swal.fire(\"Success\", message, 'success');\n  }\n  apiFail(res) {\n    Swal.fire(res?.statusCode || 'API fail', res?.status || 'Something went wrong', 'error');\n  }\n  apiSuccess(res) {\n    Swal.fire(res?.statusCode, res?.status, 'success');\n  }\n}\nAlertService.ɵfac = function AlertService_Factory(t) {\n  return new (t || AlertService)();\n};\nAlertService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AlertService,\n  factory: AlertService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AACA,OAAOA,IAAI,MAAM,aAAa;;AAK9B,OAAM,MAAOC,YAAY;EAEvBC,eAAgB;EAEhBC,KAAK,CAACC,OAAe;IACnBJ,IAAI,CAACK,IAAI,CAAC,SAAS,EAAED,OAAO,EAAE,SAAS,CAAC;EAC1C;EAEAE,OAAO,CAACF,OAAe;IACrB,OAAOJ,IAAI,CAACK,IAAI,CAAC,SAAS,EAAED,OAAO,EAAE,SAAS,CAAC;EACjD;EAEAG,OAAO,CAACC,GAAQ;IACdR,IAAI,CAACK,IAAI,CAACG,GAAG,EAAEC,UAAU,IAAI,UAAU,EAAED,GAAG,EAAEE,MAAM,IAAI,sBAAsB,EAAE,OAAO,CAAC;EAC1F;EACAC,UAAU,CAACH,GAAQ;IACjBR,IAAI,CAACK,IAAI,CAACG,GAAG,EAAEC,UAAU,EAAED,GAAG,EAAEE,MAAM,EAAE,SAAS,CAAC;EACpD;;AAjBWT,YAAY;mBAAZA,YAAY;AAAA;AAAZA,YAAY;SAAZA,YAAY;EAAAW,SAAZX,YAAY;EAAAY,YAFX;AAAM","names":["Swal","AlertService","constructor","error","message","fire","success","apiFail","res","statusCode","status","apiSuccess","factory","providedIn"],"sourceRoot":"","sources":["C:\\university_project\\src\\app\\services\\alert.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport Swal from 'sweetalert2';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AlertService {\n\n  constructor() { }\n\n  error(message: string) {\n    Swal.fire(\"Warning\", message, 'warning');\n  }\n\n  success(message: string) {\n    return Swal.fire(\"Success\", message, 'success');\n  }\n\n  apiFail(res: any) {\n    Swal.fire(res?.statusCode || 'API fail', res?.status || 'Something went wrong', 'error');\n  }\n  apiSuccess(res: any) {\n    Swal.fire(res?.statusCode, res?.status, 'success');\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}