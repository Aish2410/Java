{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/auth.service\";\nexport class AuthGuard {\n  constructor(auth) {\n    this.auth = auth;\n  }\n  canActivate(route, state) {\n    return this.auth.isLoggedIn();\n  }\n  canActivateChild(childRoute, state) {\n    return this.auth.isLoggedIn();\n  }\n}\nAuthGuard.ɵfac = function AuthGuard_Factory(t) {\n  return new (t || AuthGuard)(i0.ɵɵinject(i1.AuthService));\n};\nAuthGuard.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthGuard,\n  factory: AuthGuard.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;AAQA,OAAM,MAAOA,SAAS;EACpBC,YAAoBC,IAAiB;IAAjB,SAAI,GAAJA,IAAI;EAAiB;EACzCC,WAAW,CACTC,KAA6B,EAC7BC,KAA0B;IAC1B,OAAO,IAAI,CAACH,IAAI,CAACI,UAAU,EAAE;EAC/B;EACAC,gBAAgB,CACdC,UAAkC,EAClCH,KAA0B;IAC1B,OAAO,IAAI,CAACH,IAAI,CAACI,UAAU,EAAE;EAC/B;;AAXWN,SAAS;mBAATA,SAAS;AAAA;AAATA,SAAS;SAATA,SAAS;EAAAS,SAATT,SAAS;EAAAU,YAFR;AAAM","names":["AuthGuard","constructor","auth","canActivate","route","state","isLoggedIn","canActivateChild","childRoute","factory","providedIn"],"sourceRoot":"","sources":["C:\\university_project\\src\\app\\gurds\\auth.guard.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, CanActivateChild, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AuthService } from '../services/auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate, CanActivateChild {\n  constructor(private auth: AuthService) { }\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n    return this.auth.isLoggedIn();\n  }\n  canActivateChild(\n    childRoute: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n    return this.auth.isLoggedIn();\n  }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}