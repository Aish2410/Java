{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/alert.service\";\nimport * as i2 from \"src/app/services/auth.service\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nfunction RegisterComponent_option_30_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 20);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const role_r3 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", role_r3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(role_r3);\n  }\n}\nfunction RegisterComponent_div_31_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\", 7)(2, \"div\", 8)(3, \"label\", 21);\n    i0.ɵɵtext(4, \"Admin Name\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(5, \"input\", 22);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(6, \"div\", 7)(7, \"div\", 8)(8, \"label\", 23);\n    i0.ɵɵtext(9, \"Admin Contact\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(10, \"input\", 24);\n    i0.ɵɵelementEnd()()();\n  }\n}\nexport class RegisterComponent {\n  constructor(alert, auth) {\n    this.alert = alert;\n    this.auth = auth;\n    this.roles = ['ACM', 'APPLICANT', 'STAFF'];\n  }\n  onSubmit(ngForm) {\n    if (ngForm.form.invalid) {\n      this.alert.error(\"Please fill required elements\");\n      return;\n    }\n    const credentials = {\n      ...ngForm.form.value,\n      role: [ngForm.form.value.role]\n    };\n    this.auth.register(credentials);\n    ngForm.resetForm();\n  }\n}\nRegisterComponent.ɵfac = function RegisterComponent_Factory(t) {\n  return new (t || RegisterComponent)(i0.ɵɵdirectiveInject(i1.AlertService), i0.ɵɵdirectiveInject(i2.AuthService));\n};\nRegisterComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: RegisterComponent,\n  selectors: [[\"app-register\"]],\n  decls: 39,\n  vars: 2,\n  consts: [[1, \"register_page\", \"mt-4\"], [1, \"cantainer\"], [1, \"row\"], [1, \"col-md-4\", \"offset-md-4\"], [1, \"card\"], [3, \"ngSubmit\"], [\"registerForm\", \"ngForm\"], [1, \"col-12\", \"mt-3\"], [1, \"form-group\"], [\"for\", \"exampleInputEmail1\"], [\"type\", \"email\", \"ngModel\", \"\", \"name\", \"username\", \"pattern\", \"[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,4}$\", \"id\", \"exampleInputEmail1\", \"required\", \"\", \"aria-describedby\", \"emailHelp\", 1, \"form-control\"], [\"type\", \"text\", \"ngModel\", \"\", \"name\", \"name\", 1, \"form-control\"], [\"type\", \"number\", \"ngModel\", \"\", \"name\", \"mobileNumber\", 1, \"form-control\"], [\"for\", \"roleId\"], [\"ngModel\", \"\", \"name\", \"role\", \"required\", \"\", 1, \"form-control\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [4, \"ngIf\"], [\"for\", \"exampleInputPassword1\"], [\"type\", \"password\", \"ngModel\", \"\", \"name\", \"password\", \"id\", \"exampleInputPassword1\", \"required\", \"\", 1, \"form-control\"], [\"type\", \"submit\", 1, \"btn\", \"btn-outline-primary\", \"mt-3\"], [3, \"value\"], [\"for\", \"adminName\"], [\"type\", \"text\", \"ngModel\", \"\", \"name\", \"adminName\", \"id\", \"adminName\", \"required\", \"\", 1, \"form-control\"], [\"for\", \"adminContact\"], [\"type\", \"text\", \"ngModel\", \"\", \"name\", \"adminContact\", \"id\", \"adminContact\", \"required\", \"\", 1, \"form-control\"]],\n  template: function RegisterComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      const _r4 = i0.ɵɵgetCurrentView();\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"div\", 4)(5, \"h1\");\n      i0.ɵɵtext(6, \"Register Here\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"form\", 5, 6);\n      i0.ɵɵlistener(\"ngSubmit\", function RegisterComponent_Template_form_ngSubmit_7_listener() {\n        i0.ɵɵrestoreView(_r4);\n        const _r0 = i0.ɵɵreference(8);\n        return i0.ɵɵresetView(ctx.onSubmit(_r0));\n      });\n      i0.ɵɵelementStart(9, \"div\", 2)(10, \"div\", 7)(11, \"div\", 8)(12, \"label\", 9);\n      i0.ɵɵtext(13, \"Email address\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(14, \"input\", 10);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(15, \"div\", 7)(16, \"div\", 8)(17, \"label\", 9);\n      i0.ɵɵtext(18, \"Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(19, \"input\", 11);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(20, \"div\", 7)(21, \"div\", 8)(22, \"label\", 9);\n      i0.ɵɵtext(23, \"Mobile Number\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(24, \"input\", 12);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(25, \"div\", 7)(26, \"div\", 8)(27, \"label\", 13);\n      i0.ɵɵtext(28, \"Role\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(29, \"select\", 14);\n      i0.ɵɵtemplate(30, RegisterComponent_option_30_Template, 2, 2, \"option\", 15);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵtemplate(31, RegisterComponent_div_31_Template, 11, 0, \"div\", 16);\n      i0.ɵɵelementStart(32, \"div\", 7)(33, \"div\", 8)(34, \"label\", 17);\n      i0.ɵɵtext(35, \"Password\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(36, \"input\", 18);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(37, \"button\", 19);\n      i0.ɵɵtext(38, \"Submit\");\n      i0.ɵɵelementEnd()()()()()()();\n    }\n    if (rf & 2) {\n      const _r0 = i0.ɵɵreference(8);\n      i0.ɵɵadvance(30);\n      i0.ɵɵproperty(\"ngForOf\", ctx.roles);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", _r0.form.value.role === \"ACM\");\n    }\n  },\n  dependencies: [i3.NgForOf, i3.NgIf, i4.ɵNgNoValidate, i4.NgSelectOption, i4.ɵNgSelectMultipleOption, i4.DefaultValueAccessor, i4.NumberValueAccessor, i4.SelectControlValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.RequiredValidator, i4.PatternValidator, i4.NgModel, i4.NgForm],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;;;;;IAiCwCA,kCAAmD;IAAAA,YAAQ;IAAAA,iBAAS;;;;IAA5DA,+BAAc;IAA6BA,eAAQ;IAARA,6BAAQ;;;;;IAKvEA,2BAAoD;IAGjBA,0BAAU;IAAAA,iBAAQ;IACzCA,4BACK;IACTA,iBAAM;IAEVA,8BAAyB;IAESA,6BAAa;IAAAA,iBAAQ;IAC/CA,6BACK;IACTA,iBAAM;;;ACvC1C,OAAM,MAAOC,iBAAiB;EAK5BC,YAAoBC,KAAmB,EAAUC,IAAiB;IAA9C,UAAK,GAALD,KAAK;IAAwB,SAAI,GAAJC,IAAI;IAH9C,UAAK,GAAa,CACvB,KAAK,EAAE,WAAW,EAAE,OAAO,CAC5B;EACqE;EAEtEC,QAAQ,CAACC,MAAc;IACrB,IAAIA,MAAM,CAACC,IAAI,CAACC,OAAO,EAAE;MACvB,IAAI,CAACL,KAAK,CAACM,KAAK,CAAC,+BAA+B,CAAC;MACjD;;IAGF,MAAMC,WAAW,GAAY;MAAE,GAAGJ,MAAM,CAACC,IAAI,CAACI,KAAK;MAAEC,IAAI,EAAE,CAACN,MAAM,CAACC,IAAI,CAACI,KAAK,CAACC,IAAI;IAAC,CAAE;IACrF,IAAI,CAACR,IAAI,CAACS,QAAQ,CAACH,WAAW,CAAC;IAC/BJ,MAAM,CAACQ,SAAS,EAAE;EAEpB;;AAjBWb,iBAAiB;mBAAjBA,iBAAiB;AAAA;AAAjBA,iBAAiB;QAAjBA,iBAAiB;EAAAc;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;;MDZ9BnB,8BAAgC;MAKRA,6BAAa;MAAAA,iBAAK;MACtBA,kCAAiE;MAApCA;QAAAA;QAAA;QAAA,OAAYA,gCAAsB;MAAA,EAAC;MAE5DA,8BAAiB;MAG2BA,8BAAa;MAAAA,iBAAQ;MACrDA,6BAE2C;MAC/CA,iBAAM;MAEVA,+BAAyB;MAEeA,qBAAI;MAAAA,iBAAQ;MAC5CA,6BAA4D;MAChEA,iBAAM;MAEVA,+BAAyB;MAEeA,8BAAa;MAAAA,iBAAQ;MACrDA,6BAAuE;MAC3EA,iBAAM;MAEVA,+BAAyB;MAEGA,qBAAI;MAAAA,iBAAQ;MAChCA,mCAA4D;MACxDA,2EAAoE;MACxEA,iBAAS;MAIjBA,sEAeM;MAENA,+BAAyB;MAEkBA,yBAAQ;MAAAA,iBAAQ;MACnDA,6BACyC;MAC7CA,iBAAM;MAIdA,mCAA2D;MAAAA,uBAAM;MAAAA,iBAAS;;;;MA/BlBA,gBAAQ;MAARA,mCAAQ;MAKtDA,eAA4C;MAA5CA,oDAA4C","names":["i0","RegisterComponent","constructor","alert","auth","onSubmit","ngForm","form","invalid","error","credentials","value","role","register","resetForm","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\university_project\\src\\app\\pages\\register\\register.component.html","C:\\university_project\\src\\app\\pages\\register\\register.component.ts"],"sourcesContent":["<div class=\"register_page mt-4\">\n    <div class=\"cantainer\">\n        <div class=\"row\">\n            <div class=\"col-md-4 offset-md-4\">\n                <div class=\"card\">\n                    <h1>Register Here</h1>\n                    <form #registerForm=\"ngForm\" (ngSubmit)=\"onSubmit(registerForm)\">\n\n                        <div class=\"row\">\n                            <div class=\"col-12 mt-3\">\n                                <div class=\"form-group\">\n                                    <label for=\"exampleInputEmail1\">Email address</label>\n                                    <input type=\"email\" class=\"form-control\" ngModel name=\"username\"\n                                        pattern=\"[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$\" id=\"exampleInputEmail1\"\n                                        required aria-describedby=\"emailHelp\" >\n                                </div>\n                            </div>\n                            <div class=\"col-12 mt-3\">\n                                <div class=\"form-group\">\n                                    <label for=\"exampleInputEmail1\">Name</label>\n                                    <input type=\"text\" class=\"form-control\" ngModel name=\"name\">\n                                </div>\n                            </div>\n                            <div class=\"col-12 mt-3\">\n                                <div class=\"form-group\">\n                                    <label for=\"exampleInputEmail1\">Mobile Number</label>\n                                    <input type=\"number\" class=\"form-control\" ngModel name=\"mobileNumber\" >\n                                </div>\n                            </div>\n                            <div class=\"col-12 mt-3\">\n                                <div class=\"form-group\">\n                                    <label for=\"roleId\">Role</label>\n                                    <select  class=\"form-control\" ngModel name=\"role\" required >\n                                        <option [value]=\"role\" *ngFor=\"let role of roles\" >{{role}}</option>\n                                    </select>\n                                </div>\n                            </div>\n\n                            <div *ngIf=\"registerForm.form.value.role === 'ACM'\">\n                                <div class=\"col-12 mt-3\" >\n                                    <div class=\"form-group\">\n                                        <label for=\"adminName\">Admin Name</label>\n                                        <input type=\"text\" class=\"form-control\" ngModel name=\"adminName\" id=\"adminName\" required\n                                            >\n                                    </div>\n                                </div>\n                                <div class=\"col-12 mt-3\">\n                                    <div class=\"form-group\">\n                                        <label for=\"adminContact\">Admin Contact</label>\n                                        <input type=\"text\" class=\"form-control\" ngModel name=\"adminContact\" id=\"adminContact\" required\n                                            >\n                                    </div>\n                                </div>\n                            </div>\n\n                            <div class=\"col-12 mt-3\">\n                                <div class=\"form-group\">\n                                    <label for=\"exampleInputPassword1\">Password</label>\n                                    <input type=\"password\" class=\"form-control\" ngModel name=\"password\"\n                                        id=\"exampleInputPassword1\" required >\n                                </div>\n                            </div>\n                        </div>\n\n                        <button type=\"submit\" class=\"btn btn-outline-primary mt-3\">Submit</button>\n                    </form>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>","import { Component } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { UserDTO } from 'src/app/interfaces';\nimport { AlertService } from 'src/app/services/alert.service';\nimport { AuthService } from 'src/app/services/auth.service';\n\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.scss']\n})\nexport class RegisterComponent {\n\n  public roles: string[] = [\n    'ACM', 'APPLICANT', 'STAFF'\n  ]\n  constructor(private alert: AlertService, private auth: AuthService) { }\n\n  onSubmit(ngForm: NgForm) {\n    if (ngForm.form.invalid) {\n      this.alert.error(\"Please fill required elements\");\n      return;\n    }\n\n    const credentials: UserDTO = { ...ngForm.form.value, role: [ngForm.form.value.role] };\n    this.auth.register(credentials);\n    ngForm.resetForm();\n\n  }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}