{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ApiService {\n  constructor(http) {\n    this.http = http;\n    this.API_BASE_URL = 'http://localhost:8080';\n  }\n  post(uri, payload) {\n    return this.http.post(this.API_BASE_URL + uri, payload);\n  }\n  postAuth(uri, payload) {\n    const header = this.getHeader();\n    return this.http.post(this.API_BASE_URL + uri, payload, header);\n  }\n  getAuth(uri) {\n    // return this.http.get(apiUrl, { headers: headers })\n    const header = this.getHeader();\n    return this.http.get(this.API_BASE_URL + uri, header);\n  }\n  deleteAuth(uri) {\n    const header = this.getHeader();\n    return this.http.delete(this.API_BASE_URL + uri, header);\n  }\n  getHeader() {\n    const token = sessionStorage.getItem('SESSION_TOKEN');\n    const headers = new HttpHeaders({\n      'Authorization': token || ''\n    });\n    return {\n      headers: headers\n    };\n  }\n}\nApiService.ɵfac = function ApiService_Factory(t) {\n  return new (t || ApiService)(i0.ɵɵinject(i1.HttpClient));\n};\nApiService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ApiService,\n  factory: ApiService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAAA,SAAqBA,WAAW,QAAQ,sBAAsB;;;AAM9D,OAAM,MAAOC,UAAU;EAGrBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IADhB,iBAAY,GAAW,uBAAuB;EACd;EAExCC,IAAI,CAACC,GAAW,EAAEC,OAAY;IAC5B,OAAO,IAAI,CAACH,IAAI,CAACC,IAAI,CAAC,IAAI,CAACG,YAAY,GAAGF,GAAG,EAAEC,OAAO,CAAC;EACzD;EACAE,QAAQ,CAACH,GAAW,EAAEC,OAAY;IAChC,MAAMG,MAAM,GAAG,IAAI,CAACC,SAAS,EAAE;IAC/B,OAAO,IAAI,CAACP,IAAI,CAACC,IAAI,CAAC,IAAI,CAACG,YAAY,GAAGF,GAAG,EAAEC,OAAO,EAAEG,MAAM,CAAC;EACjE;EACAE,OAAO,CAACN,GAAW;IAEjB;IACA,MAAMI,MAAM,GAAG,IAAI,CAACC,SAAS,EAAE;IAC/B,OAAO,IAAI,CAACP,IAAI,CAACS,GAAG,CAAC,IAAI,CAACL,YAAY,GAAGF,GAAG,EAAEI,MAAM,CAAC;EACvD;EACAI,UAAU,CAACR,GAAW;IACpB,MAAMI,MAAM,GAAG,IAAI,CAACC,SAAS,EAAE;IAC/B,OAAO,IAAI,CAACP,IAAI,CAACW,MAAM,CAAC,IAAI,CAACP,YAAY,GAAGF,GAAG,EAAEI,MAAM,CAAC;EAC1D;EAEAC,SAAS;IACP,MAAMK,KAAK,GAAGC,cAAc,CAACC,OAAO,CAAC,eAAe,CAAC;IACrD,MAAMC,OAAO,GAAG,IAAIlB,WAAW,CAAC;MAC9B,eAAe,EAAEe,KAAK,IAAI;KAC3B,CAAC;IACF,OAAQ;MAAEG,OAAO,EAAEA;IAAO,CAAE;EAC9B;;AA7BWjB,UAAU;mBAAVA,UAAU;AAAA;AAAVA,UAAU;SAAVA,UAAU;EAAAkB,SAAVlB,UAAU;EAAAmB,YAFT;AAAM","names":["HttpHeaders","ApiService","constructor","http","post","uri","payload","API_BASE_URL","postAuth","header","getHeader","getAuth","get","deleteAuth","delete","token","sessionStorage","getItem","headers","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\Dell\\university_project\\src\\app\\services\\api.service.ts"],"sourcesContent":["import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiService {\n\n  private API_BASE_URL: string = 'http://localhost:8080';\n  constructor(private http: HttpClient) { }\n\n  post(uri: string, payload: any) {\n    return this.http.post(this.API_BASE_URL + uri, payload);\n  }\n  postAuth(uri: string, payload: any) {\n    const header = this.getHeader();\n    return this.http.post(this.API_BASE_URL + uri, payload, header);\n  }\n  getAuth(uri: string) {\n\n    // return this.http.get(apiUrl, { headers: headers })\n    const header = this.getHeader();\n    return this.http.get(this.API_BASE_URL + uri, header);\n  }\n  deleteAuth(uri: string) {\n    const header = this.getHeader();\n    return this.http.delete(this.API_BASE_URL + uri, header);\n  }\n\n  getHeader() {\n    const token = sessionStorage.getItem('SESSION_TOKEN');\n    const headers = new HttpHeaders({\n      'Authorization': token || '',\n    });\n    return ({ headers: headers });\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}